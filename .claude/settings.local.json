{
  "permissions": {
    "allow": [
      "Bash(__NEW_LINE__ gh issue create --title \"Implement feedback system and statistics display\" --body \"Create immediate feedback mechanism and real-time statistics tracking.\n\n**Feedback features:**\n- Instant correct/incorrect visual response (color change)\n- Display correct answer on mistakes\n- Brief delay before next card (1 second)\n- Smooth transitions between cards\n\n**Statistics to display:**\n- Current score (correct/total)\n- Overall accuracy percentage\n- Current streak\n- Cards due today\n- Cards learned today\n- Current level (1-3)\n\n**Acceptance Criteria:**\n- Feedback appears immediately after answer\n- Correct answer shown on mistakes\n- Statistics update in real-time\n- Streak tracking works correctly\n- Level display accurate\" --label \"P0-MVP,type: feature,area: ui\" --milestone \"MVP (v0.1)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Implement main app controller and game loop\" --body \"Create main application logic coordinating all components.\n\n**Core functionality:**\n- Initialize app on page load\n- Card selection logic (due cards first, then new cards)\n- Answer checking and quality grading\n- Update card states via SM-2\n- Persist data after each review\n- Handle keyboard shortcuts\n- Session management\n\n**Game loop:**\n1. Load due cards and new cards (limit 5 new per session)\n2. Select next card (weighted by overdue amount)\n3. Display card to user\n4. Accept and validate answer\n5. Grade quality (0-5 based on speed and correctness)\n6. Update card via SM-2 algorithm\n7. Save state\n8. Show next card\n\n**Acceptance Criteria:**\n- App initializes correctly on load\n- Card selection prioritizes due cards\n- Answer validation works for all characters\n- SM-2 updates applied correctly\n- Data persists after each review\n- Keyboard shortcuts functional (Enter=submit, Esc=reveal)\" --label \"P0-MVP,type: feature,area: algorithm\" --milestone \"MVP (v0.1)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Implement progressive level system\" --body \"Create level-based character unlocking based on mastery thresholds.\n\n**Level progression:**\n- Level 1: 19 common consonants (start here)\n- Level 2: +25 more consonants (unlock at 80% accuracy on level 1)\n- Level 3: All 44 consonants (unlock at 80% accuracy on level 2)\n\n**Features:**\n- Track accuracy per level\n- Auto-unlock next level when threshold met\n- Visual indicator of current level\n- Option to manually review previous levels\n- Congratulatory message on level unlock\n\n**Acceptance Criteria:**\n- Users start with level 1 only\n- Level 2 unlocks automatically at 80% accuracy\n- Level 3 unlocks automatically at 80% accuracy\n- Level indicator displays correctly\n- Can practice any unlocked level\n- Unlock notifications appear\" --label \"P0-MVP,type: feature,area: algorithm\" --milestone \"MVP (v0.1)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Identify and highlight confusion pairs\" --body \"Analyze confusion matrix to identify systematically confused character pairs.\n\n**Features:**\n- Identify top 10 confusion pairs (threshold: 3+ confusions)\n- Display confusion pairs in UI with counts\n- Visual highlighting when confused pairs appear\n- Statistics showing improvement over time\n\n**Acceptance Criteria:**\n- Top confusion pairs calculated correctly\n- Pairs displayed with confusion counts\n- Visual highlighting works\n- Tracks reduction in confusion over time\" --label \"P1-High,type: feature,area: analytics\" --milestone \"Enhanced Learning (v0.5)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Special drill mode for confused pairs\" --body \"Create targeted practice mode for confused character pairs.\n\n**Features:**\n- Drill mode focusing only on confused pairs\n- Show pairs side-by-side for comparison\n- Increased repetition of confused pairs\n- Exit when confusion rate drops below threshold\n\n**Acceptance Criteria:**\n- Can enter confusion pair drill mode\n- Only shows confused pairs\n- Side-by-side comparison displayed\n- Tracks improvement during drill\n- Auto-exits when mastered\" --label \"P1-High,type: feature,area: drills\" --milestone \"Enhanced Learning (v0.5)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Visual comparison tool for similar characters\" --body \"Show confused pairs side-by-side with visual differentiators highlighted.\n\n**Features:**\n- Split-screen display of confused pairs\n- Highlight visual differences\n- Annotations pointing out key features\n- Mnemonic hints for differentiation\n\n**Example:**\n- ข vs ค: \"\"ข has a tail loop, ค has a straight tail\"\"\n- ถ vs ท: \"\"ถ has a stem, ท is rounded\"\"\n\n**Acceptance Criteria:**\n- Side-by-side comparison displays correctly\n- Visual differences highlighted\n- Mnemonic hints display\n- Works for all common confusion pairs\" --label \"P1-High,type: feature,area: ui\" --milestone \"Enhanced Learning (v0.5)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Speed round drill mode\" --body \"Create timed practice mode focusing on rapid recognition without penalties.\n\n**Features:**\n- 60-second timed rounds\n- No penalties for wrong answers\n- Count correct answers only\n- Leaderboard/personal best tracking\n- Progress bar showing time remaining\n\n**Acceptance Criteria:**\n- Timer counts down from 60 seconds\n- Wrong answers don''t penalize (but don''t count)\n- Score tracked and displayed\n- Personal best saved\n- Can restart immediately\" --label \"P1-High,type: feature,area: drills\" --milestone \"Enhanced Learning (v0.5)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Multiple choice drill mode\" --body \"Create multiple choice practice with 4 options per character.\n\n**Features:**\n- Display Thai character with 4 romanization options\n- 1 correct answer + 3 distractors\n- Smart distractors (similar sounds, confused pairs)\n- Click or keyboard number selection (1-4)\n- Immediate feedback on selection\n\n**Acceptance Criteria:**\n- 4 options displayed clearly\n- Distractors are plausible (not random)\n- Keyboard shortcuts work (1-4)\n- Visual feedback on selection\n- Correct answer highlighted\" --label \"P1-High,type: feature,area: drills\" --milestone \"Enhanced Learning (v0.5)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Reverse drill mode (romanization → Thai)\" --body \"Practice producing Thai characters from romanization.\n\n**Features:**\n- Display romanization (e.g., ''kh'')\n- User selects or types Thai character\n- Multiple options shown as buttons\n- Tracks production accuracy separately\n\n**Note:** This is a stepping stone toward writing practice, but focuses on recognition/selection first.\n\n**Acceptance Criteria:**\n- Romanization displayed\n- Thai character options shown\n- User can select correct character\n- Tracks accuracy separately from recognition\n- Works with keyboard selection\" --label \"P1-High,type: feature,area: drills\" --milestone \"Enhanced Learning (v0.5)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Source and prepare Thai audio files\" --body \"Acquire or generate native Thai pronunciation audio for all consonants.\n\n**Options:**\n1. Record native speaker pronunciation\n2. Use Thai Text-to-Speech API (Google Cloud TTS)\n3. Find open-source Thai audio dataset\n\n**Requirements:**\n- All 44 consonants\n- Clear, native pronunciation\n- Consistent quality and volume\n- Format: MP3 or OGG (web-compatible)\n- License: Freely usable\n\n**Acceptance Criteria:**\n- Audio files for all 44 consonants\n- Consistent naming convention (e.g., ''ก.mp3'')\n- Placed in assets/audio/\n- Quality verified\n- License documented\" --label \"P1-High,type: feature,area: audio\" --milestone \"Full Feature (v1.0)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Implement audio player component\" --body \"Create audio playback functionality with controls.\n\n**Features:**\n- Play pronunciation on button click\n- Auto-play on character reveal (toggleable)\n- Volume control\n- Playback speed control (0.5x, 1x, 1.5x)\n- Visual feedback when playing\n\n**Acceptance Criteria:**\n- Audio plays on button click\n- Auto-play toggle works\n- Volume control functional\n- Speed control works\n- Visual indicator shows when playing\" --label \"P1-High,type: feature,area: audio\" --milestone \"Full Feature (v1.0)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Audio settings panel\" --body \"Create settings UI for audio preferences.\n\n**Settings:**\n- Enable/disable audio\n- Auto-play on/off\n- Volume slider (0-100%)\n- Playback speed (0.5x, 0.75x, 1x, 1.25x, 1.5x)\n- Persist settings in localStorage\n\n**Acceptance Criteria:**\n- Settings panel displays correctly\n- All controls functional\n- Settings persist across sessions\n- Changes apply immediately\n- Keyboard accessible\" --label \"P1-High,type: feature,area: ui\" --milestone \"Full Feature (v1.0)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Learning curve chart (accuracy over time)\" --body \"Create line chart showing accuracy improvement over time.\n\n**Features:**\n- Daily accuracy percentage plotted\n- Separate lines for each level\n- Interactive hover showing details\n- Date range selector (7d, 30d, all time)\n- Export chart as image\n\n**Library:** Use Chart.js or similar lightweight library\n\n**Acceptance Criteria:**\n- Chart displays daily accuracy\n- Multiple date ranges work\n- Interactive hover functional\n- Responsive on mobile\n- Export works\" --label \"P1-High,type: feature,area: analytics\" --milestone \"Full Feature (v1.0)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Heatmap calendar (review activity)\" --body \"Create GitHub-style heatmap showing daily review activity.\n\n**Features:**\n- Grid showing last 12 months\n- Color intensity based on cards reviewed\n- Hover shows exact count and date\n- Click date to see session details\n- Visual motivation tool\n\n**Acceptance Criteria:**\n- Heatmap displays correctly\n- Color intensity scales properly\n- Hover tooltips work\n- Responsive design\n- Covers last 365 days\" --label \"P1-High,type: feature,area: analytics\" --milestone \"Full Feature (v1.0)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Character mastery grid visualization\" --body \"Create visual grid showing mastery level for all characters.\n\n**Features:**\n- Grid of all 44 Thai characters\n- Color coded by ease factor:\n  - Red (1.3-1.8): Very difficult\n  - Orange (1.8-2.3): Difficult\n  - Yellow (2.3-2.8): Learning\n  - Green (2.8+): Mastered\n- Hover shows stats (correct/wrong, ease factor, next review)\n- Click character for detailed history\n\n**Acceptance Criteria:**\n- All characters displayed in grid\n- Color coding accurate\n- Hover tooltips informative\n- Visual overview of progress\n- Responsive layout\" --label \"P1-High,type: feature,area: analytics\" --milestone \"Full Feature (v1.0)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Session statistics dashboard\" --body \"Display comprehensive statistics for current and past sessions.\n\n**Current session:**\n- Time spent (running timer)\n- Cards reviewed\n- New cards learned\n- Accuracy this session\n- Average response time\n\n**Historical:**\n- Total sessions\n- Total time spent\n- Total cards reviewed\n- All-time accuracy\n- Longest streak\n\n**Acceptance Criteria:**\n- All stats calculated correctly\n- Session timer accurate\n- Historical data aggregated properly\n- Updates in real-time during session\n- Persistent across app restarts\" --label \"P1-High,type: feature,area: analytics\" --milestone \"Full Feature (v1.0)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Data export functionality\" --body \"Allow users to export their complete learning data.\n\n**Formats:**\n- JSON (complete raw data)\n- CSV (tabular format for spreadsheets)\n- Includes: card states, session history, settings, confusion matrix\n\n**Features:**\n- Export button in settings\n- Choose format (JSON or CSV)\n- Download as file\n- Include timestamp in filename\n- Import functionality (restore from backup)\n\n**Acceptance Criteria:**\n- Export generates valid JSON/CSV\n- All data included\n- Import restores state correctly\n- File naming convention clear\n- Works across browsers\" --label \"P1-High,type: feature,area: data\" --milestone \"Full Feature (v1.0)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Add Thai vowel character data\" --body \"Extend data layer to include Thai vowels and diphthongs.\n\n**Requirements:**\n- All Thai vowels (standalone and combining marks)\n- RTGS romanization for each\n- Combining behavior with consonants\n- Display with placeholder consonant (e.g., ก)\n\n**Data structure:**\n\\`\\`\\`javascript\nconst vowels = {\n  ''ะ'': { roman: ''a'', type: ''short'', combining: ''after'' },\n  ''า'': { roman: ''a'', type: ''long'', combining: ''after'' },\n  ''ิ'': { roman: ''i'', type: ''short'', combining: ''above'' },\n  // ...\n};\n\\`\\`\\`\n\n**Acceptance Criteria:**\n- All vowels mapped\n- Combining marks display correctly\n- RTGS romanization accurate\n- Export functions ready\" --label \"P2-Medium,type: feature,area: data\" --milestone \"Full Feature (v1.0)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Consonant+vowel combination practice\" --body \"Advanced mode practicing full syllables (consonant + vowel).\n\n**Features:**\n- Display real consonant+vowel combinations\n- User types full romanization (e.g., ''ka'', ''kho'', ''phi'')\n- Common syllables from real Thai words\n- More realistic reading practice\n- Separate difficulty level\n\n**Acceptance Criteria:**\n- Combinations display correctly\n- Input validation works\n- Common syllables prioritized\n- Bridges to actual reading\n- Optional/advanced mode\" --label \"P2-Medium,type: feature,area: drills\" --milestone \"Full Feature (v1.0)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Mobile responsive design\" --body \"Optimize UI for mobile devices and small screens.\n\n**Requirements:**\n- Touch-friendly targets (min 44x44px)\n- Responsive layout (flexbox/grid)\n- Breakpoints for phone/tablet/desktop\n- Virtual keyboard optimizations\n- Swipe gestures for navigation\n- No horizontal scrolling\n\n**Acceptance Criteria:**\n- Works perfectly on iOS and Android\n- Touch targets accessible\n- Keyboard doesn''t break layout\n- Swipe left/right for next/previous\n- Portrait and landscape support\" --label \"P1-High,type: enhancement,area: ui\" --milestone \"Production (v1.1)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Dark mode implementation\" --body \"Add dark color scheme with toggle.\n\n**Features:**\n- Dark theme color palette\n- Toggle in header or settings\n- Persist preference in localStorage\n- CSS variables for theming\n- Smooth transition between themes\n- Respect system preference (prefers-color-scheme)\n\n**Acceptance Criteria:**\n- Dark mode looks good (proper contrast)\n- Toggle works instantly\n- Preference persists\n- System preference detected\n- All components styled for both themes\" --label \"P1-High,type: enhancement,area: ui\" --milestone \"Production (v1.1)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Settings panel implementation\" --body \"Create comprehensive settings UI.\n\n**Settings categories:**\n- Audio: enable, auto-play, volume, speed\n- Practice: new cards/day, drill mode preferences\n- Display: dark mode, font size, animations\n- Data: export, import, reset progress\n\n**Features:**\n- Organized sections\n- Intuitive controls\n- Persist all settings\n- Reset to defaults option\n- Accessible via keyboard and button\n\n**Acceptance Criteria:**\n- All settings functional\n- Changes apply immediately\n- Persistence works\n- Settings panel responsive\n- Keyboard accessible\" --label \"P1-High,type: feature,area: ui\" --milestone \"Production (v1.1)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"GitHub Pages deployment setup\" --body \"Deploy application to GitHub Pages with custom domain support.\n\n**Tasks:**\n- Configure gh-pages branch\n- Set up GitHub Actions for auto-deploy\n- Add custom domain (optional)\n- Configure HTTPS\n- Add meta tags for SEO\n- Create favicon\n\n**Deployment:**\n- URL: https://[username].github.io/thai-script/\n- Auto-deploy on push to main\n\n**Acceptance Criteria:**\n- App accessible via GitHub Pages\n- HTTPS enabled\n- Auto-deployment working\n- SEO meta tags present\n- Favicon displays\n- Performance optimized\" --label \"P1-High,type: feature\" --milestone \"Production (v1.1)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"PWA setup with offline support\" --body \"Convert app to Progressive Web App with offline functionality.\n\n**Requirements:**\n- Service worker for caching\n- Web app manifest\n- Installable on mobile/desktop\n- Offline functionality (core features work)\n- App icons (multiple sizes)\n\n**Manifest:**\n- App name: Thai Script Master\n- Short name: Thai Script\n- Theme color\n- Display: standalone\n- Icons: 192x192, 512x512\n\n**Acceptance Criteria:**\n- PWA installable on devices\n- Works offline (after first load)\n- Service worker caches assets\n- Manifest validates\n- App icons display correctly\" --label \"P1-High,type: enhancement\" --milestone \"Production (v1.1)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Performance optimization\" --body \"Optimize app performance and loading speed.\n\n**Optimizations:**\n- Minimize and bundle CSS/JS (if needed)\n- Lazy load analytics charts\n- Optimize font loading (font-display: swap)\n- Reduce localStorage reads/writes\n- Debounce expensive operations\n- Lighthouse score >90\n\n**Acceptance Criteria:**\n- Fast initial load (<2s)\n- Smooth animations (60fps)\n- Lighthouse score >90\n- No performance warnings\n- Works well on slower devices\" --label \"P1-High,type: enhancement\" --milestone \"Production (v1.1)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Browser compatibility testing\" --body \"Test and fix compatibility issues across browsers.\n\n**Browsers to test:**\n- Chrome/Edge (latest)\n- Firefox (latest)\n- Safari (latest, iOS)\n- Mobile browsers (Chrome, Safari iOS)\n\n**Tests:**\n- Thai character display\n- localStorage functionality\n- Audio playback\n- Touch gestures\n- Keyboard shortcuts\n- CSS animations\n\n**Acceptance Criteria:**\n- Works perfectly on all major browsers\n- No console errors\n- Thai fonts display correctly\n- Audio plays on all platforms\n- Touch gestures work on mobile\" --label \"P1-High,type: bug\" --milestone \"Production (v1.1)\")",
      "Bash(__NEW_LINE__ gh issue create --title \"Accessibility (a11y) improvements\" --body \"Ensure app is accessible to all users.\n\n**Requirements:**\n- ARIA labels for all interactive elements\n- Keyboard navigation throughout\n- Screen reader support\n- Sufficient color contrast (WCAG AA)\n- Focus indicators visible\n- Skip links\n- Alt text for images\n\n**Tools:**\n- axe DevTools for testing\n- Lighthouse accessibility audit\n- Screen reader testing (NVDA/VoiceOver)\n\n**Acceptance Criteria:**\n- Lighthouse accessibility score 100\n- Fully keyboard navigable\n- Screen reader announces correctly\n- WCAG 2.1 AA compliant\n- Focus indicators present\" --label \"P2-Medium,type: enhancement,area: ui\" --milestone \"Production (v1.1)\")"
    ],
    "deny": [],
    "ask": []
  }
}
